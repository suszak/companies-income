{"version":3,"sources":["conteiners/loadingScreen/loadingScreen.js","images/open white.svg","components/tableItem/tableItem.js","conteiners/incomeTable/incomeTable.js","components/pages/pages.js","conteiners/loaded/loaded.js","helper/readingVh.js","conteiners/company/company.js","helper/usePrevious.js","App.js","serviceWorker.js","index.js"],"names":["LoadingScreen","slowConnection","document","querySelector","innerText","useEffect","slowConnectionTimeout","setTimeout","clearTimeout","className","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","id","x","y","width","height","xlinkHref","_ref","svgRef","title","props","viewBox","ref","ForwardRef","forwardRef","TableItem","name","city","totalIncome","to","IncomeTable","currentCompanies","map","el","Pages","currentPage","totalPages","paginate","pageNumbers","push","number","index","onClick","Loaded","company","numberOfItems","useState","setCurrentPage","companiesPerPage","dataToShow","setDataToShow","indexOfLastPost","indexOfFirstPost","slice","Math","ceil","type","onChange","filterValue","value","result","filter","toUpperCase","placeholder","pageNumber","readVh","vh","window","innerHeight","documentElement","style","setProperty","Company","month","data","incomes","setIncomes","companyInfo","setCompanyInfo","useParams","totalSum","setTotalSum","totalAvg","setTotalAvg","avg","setAvg","sum","setSum","today","Date","year","getMonth","getFullYear","startDate","setStartDate","endDate","setEndDate","filterTable","array","Number","parseFloat","toFixed","countTotalIncomes","date","alert","countIncomes","dateTimeFormat","Intl","DateTimeFormat","day","formatToParts","monthStart","dayStart","yearStart","monthEnd","dayEnd","yearEnd","htmlFor","usePrevious","useRef","current","App","companies","setCompanies","sorted","setSorted","setNumberOfItems","loading","setLoading","getSummaryData","a","fetch","response","ok","json","console","error","getIncomeData","Promise","all","axios","then","responses","res","filtered","catch","prevCompanies","prevIncomes","addEventListener","newCompanies","find","sortedArray","sort","b","sortArrayByTotalIncome","exact","path","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.e88ccecd.chunk.js","sourcesContent":["import React, { useEffect } from 'react'\r\nimport './loadingScreen.css'\r\n\r\nconst LoadingScreen = () => {\r\n    //  adding information on loading screen\r\n    const slowConnection = () => {\r\n        document.querySelector('.loadingScreen__info').innerText = 'Your connection is slow, please wait a moment'\r\n    }\r\n\r\n    useEffect(() => {\r\n        //  set timeout on mount\r\n        let slowConnectionTimeout = setTimeout( slowConnection, 16000)\r\n\r\n        //  clear timeout on unmount\r\n        return() => clearTimeout(slowConnectionTimeout)\r\n    }, [])\r\n\r\n    return(\r\n        <section className=\"loadingScreen\">\r\n            <div className='loadingScreen__title'>Loading</div>\r\n            <div className='loadingScreen__info'></div>\r\n            <span className=\"loadingScreen__animation\">\r\n                <div className='element1'></div>\r\n                <div className='element2'></div>\r\n                <div className='element3'></div>\r\n                <div className='element4'></div>\r\n                <div className='element5'></div>\r\n            </span>\r\n            <div className='background background__first'></div>\r\n            <div className='background background__second'></div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default LoadingScreen\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"image\", {\n  id: \"Warstwa_1\",\n  \"data-name\": \"Warstwa 1\",\n  x: 20,\n  y: 20,\n  width: 160,\n  height: 160,\n  xlinkHref: \"data:img/png;base64,iVBORw0KGgoAAAANSUhEUgAAAKAAAACgCAYAAACLz2ctAAAHL0lEQVR4nO3dS6gXVQDH8a+PrBSsJCEq6GlZKTfvprep4AuLWkSLahFmGr0Qimqhi1oVBWK37KZZi1ZRuIiKLHxguSwrIfRqFykKTBc+IvNW3jh2/nD9c+f/n5kzM+fMmd9nE4V3PDPz7cz/PzN3Zszw8DAZXQ4sAWYDM4CLgcnA2KwLCsTfwAFgK9APfBf4eHuB5cA84DJgQgBj6mTk9n0b2DXyz2YJcD7wLLCgytF7sB5YCZwIbFznAn3AIwGMJS8T2zvA08BfpAzwSjszzA91rUqwA1gUUIQmvs3AHQGMpQhm+y40EXY7bD4A/NCw+LAfL9YEMI6Wvojiw27ftXSYAccAq4EXKx9aWGYF8JnQjOHb0DZMAUx4vUkz4CrFd9ryAMawIoAxlMFMcitGmwEfAt6PYhXd7QWmex7DADDN8xjKMtAe4HV2uj8nqtXMbwg42/MYTtbgVEteQyMPweOA9xSfVGjCyAAfBG7S1j/DYABjOBDAGErTCnA88FKE6+dqSwBj2BrAGErTCvBee1lHzrQ+gO3Rb09ZRKkV4KOxrqCDdfYkvG/fB/I/QinMt+ApwEF7GJb/bQcWt65XBsB8MfwcuDO2/WNmwLmK7wzrAosPO5ZF9m6SqA7HJsBbAxiHT+Zc3x7gTaAHeCKw+FrMmB6zl+bW2ZPkQ2EMLT9zCP6ioJsN+uxO3Aec8rVCkttFwLaqr/yMt7dbuVoGbNS+ry0v8WFnwKP2jua8PgbuiWI3NJO3+LCfASc5LuOtgsYi1fMaH3YGdP1WdQFwpKDxSHW8x0dBAY6N+Ux9pIKIj4J+k03x1Usw8VHjX6WUfIKKDwXYKMHFhwJsjCDjQwE2QrDxoQCjF3R8KMCoVRHfgOsCFGCcqopvrutCFGB8qozvN9cFKcC41Co+FGBUahcfCjAatYwPBRiF2saHAqy9WseHAqy12seHAqytKOJDAdZSNPGhAGsnqvhQgLUSXXwowNqIMj4UYC1EGx8KMHhRx4cCDFr08aEAg9WI+FCAQWpMfCjA4DQqPhRgUOoan8tDMk8qwDDUeeZzeY/JoAL0r+6HXZf3mGwp4ulYYxx/vsli+MzXY1/Dn7UD012PZkB/YvnCkfc9JuZB67s1A/oR27fdrO8x2WZfhaEvIR7EeKol7XtMhu2bFBbb19AW8oRUzYDpNeE8X4990/w84Ar73wbtix/NoXr3yD+sAKvTuJPMaegQXA3Fl0ABlk/xdaAAy6X4ulCA5VF8KSjAcii+lBRg8RRfBgqwWIovIwVYHMWXgwIshuLLSQG6U3wOFKAbxedIAean+AqgAPNRfAVRgNkpvgIpwGwUX8EUYHqKrwQKMB3FVxIF2N1UxVceBdiZ2T6bFF95FGBny4DbS1x+o+NDv5TUlQlkWonLbnR8aAbsaKbiK58CTNZb0nIV3wgKMNmUEpap+NoowGQnCl6e4huFAky2p8BlKb4E+haczDzx6SAw2XE5iq8DzYDJzBOf3nVchuLrQjNgZxcCP9rLcVkpvhQ0A3Z2GLi/9Sy7DBRfSgqwu+32gYqHUv75r+3lO8WXggJMx9wNcz3wOnA84Sf22wczzskQa4x67ZNS99l3iAzZI0I/cGP7+uozYHbm2/HNwLXAJHuY3tX+5M8Gmgj0AUu7rLp5SurK1nlWBShFMPFtznDn0A77TOkTOgRLEfoy3rY2G1iDZkApgPnM903OxczSDCiuVjj8/HLNgOLKfNu9Oucy9ipAcWVOs5yVcxlDClBcOfWjz4DilQIUrxSgeKUAxSsFKF4pQPFKAYpXClC8UoDilQIUrxSgeKUAxSsFKF4pQPFKAYpXClC8UoDilQIUrxSgeKUAxSsFKF4pQPFKAYpXClC8UoDilQIUrxSgeKUAxSsFKF4pQPFKAYpXClC8UoDilQIUrxSgeKUAxSsFKF4pQPFKAYpXClC8UoDiVREB6k1JzeW874sI8PwG74Cmm+K6/ibAfx2XcVvT90KD3eK46v+YAP9wXMhTOgw3ktnnTzqu+HET4CHHhSywEUqzPA4sdFzjwybAwQI221pgA3ADMK5pe6JBxtl93A+8UcBq/2TeF/wa8EzTt6x48aqZAXdq24snO80MaE6j/O7w2nWRPMyr/qeaGfAI8KU2oVTMNHesdSJ6g7a+VGy9+evMIRj77WYvcJX2glRgPzDdXARpzYDmashqbXmpyKrWFbjWDIi9LLdDl9akZF8Bc4BTtAVoXAPsAiZqL0gJ/gR67CH4tPa7YQaApdryUpKHR8ZHwu1YHwAvaA9IwZ4HPmxf5PiEv+MV+8+XtRekAM+Zy26jLab9M2C7+4CNwGTtBcnhqP1ItynpR7vdEf0RMBP4VFtfMvrEtpMYHylvyf8ZuAuYa0PsOGVKow3bRkwrdwO/dNsY3Q7Bo7kUWGLP5cwALgHO02/YNY45kXwM+BXYDWwDPrP/ng7wH38J6Uf12MOKAAAAAElFTkSuQmCC\"\n});\n\nvar SvgOpenwhite = function SvgOpenwhite(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 200,\n    height: 200,\n    viewBox: \"0 0 200 200\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgOpenwhite, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/open white.5c3c13c7.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './tableItem.css'\r\nimport { ReactComponent as OpenSite } from '../../images/open white.svg'\r\n\r\nconst TableItem = (props) => {\r\n    return (\r\n        <div className='tableItem'>\r\n            <div className='wrapper'>\r\n                <div className='elements'>\r\n                    <p className='tableItem__element'>{props.id}</p>\r\n                    <p className='tableItem__element'>{props.name}</p>\r\n                </div>\r\n                <div className='elements'>\r\n                    <p className='tableItem__element'>{props.city}</p>\r\n                    <p className='tableItem__element'>{props.totalIncome}</p>        \r\n                </div>\r\n            </div>\r\n            <Link to={`/company/${props.id}`} className='tableItem__open' ><OpenSite className='tableItem__open' /></Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TableItem\r\n","import React from 'react'\r\nimport './incomeTable.css'\r\nimport TableItem from '../../components/tableItem/tableItem'\r\n\r\nconst IncomeTable = ({ currentCompanies }) => {\r\n  return(\r\n    <section className='incomeTable'>\r\n      <ul className='table'>\r\n        {\r\n          (currentCompanies.length !== 0)\r\n            ?\r\n              currentCompanies.map((el) =>\r\n                <TableItem key={el.id} id={el.id} name={el.name} city={el.city} totalIncome={el.totalIncome} />)\r\n            :\r\n              <p className='table__error'>Nothing to show</p>\r\n        }\r\n      </ul>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default IncomeTable\r\n","import React from 'react'\r\nimport './pages.css'\r\n\r\nconst Pages = ({ currentPage, totalPages, paginate }) => {\r\n    const pageNumbers = []\r\n    if(totalPages >= 5) {\r\n      if(currentPage - 2 > 1 && currentPage + 2 < totalPages) {\r\n          for(let i = currentPage - 2; i <= currentPage + 2; i++) {\r\n              pageNumbers.push(i)\r\n          }\r\n      } else if(currentPage - 2 <= 1 && currentPage + 1 < totalPages) {\r\n          for(let i = 1; i <= 5; i++) {\r\n            pageNumbers.push(i)\r\n          }\r\n      } else if(currentPage - 2 > 1 && currentPage + 2 >= totalPages) {\r\n          for(let i = totalPages - 4; i <= totalPages; i++) {\r\n            pageNumbers.push(i)\r\n          }\r\n      }\r\n    } else {\r\n      for(let i = 1; i <= totalPages; i++) {\r\n        pageNumbers.push(i)\r\n      }\r\n    }\r\n\r\n    return (\r\n      <nav>\r\n        <ul className='pages'>\r\n          {pageNumbers.map((number, index) => (\r\n            <li onClick={() => paginate(number)} key={number} className={(number===currentPage)?'pages__number pages__number--current':'pages__number'}>\r\n              <p className={(number===currentPage)?'pages__item pages__item--current':'pages__item'}>{number}</p>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </nav>\r\n    );\r\n  };\r\n\r\n  export default Pages;","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './loaded.css'\r\nimport IncomeTable from '../incomeTable/incomeTable'\r\nimport Pages from '../../components/pages/pages'\r\n\r\nconst Loaded = ({company, numberOfItems}) => {\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    const [companiesPerPage] = useState(numberOfItems) //   Read from readVh in readingVh.js\r\n    const [dataToShow, setDataToShow] = useState([])\r\n\r\n    const indexOfLastPost = currentPage * companiesPerPage\r\n    const indexOfFirstPost = indexOfLastPost - companiesPerPage\r\n    const currentCompanies = dataToShow.slice(indexOfFirstPost, indexOfLastPost)\r\n    const totalPages = Math.ceil(dataToShow.length / companiesPerPage)\r\n\r\n    //  Change page\r\n    const paginate = pageNumber => {\r\n        setCurrentPage(pageNumber)\r\n    }\r\n\r\n    //  Filter results\r\n    const filter = () => {\r\n        const filterValue = document.querySelector('#filter').value;\r\n        if(filterValue.length > 0) {\r\n            const result = company.filter(company => company.name.toUpperCase().indexOf(filterValue.toUpperCase()) !== -1)\r\n            setDataToShow(result)\r\n            setCurrentPage(1)\r\n        } else {\r\n            setDataToShow(company)\r\n            setCurrentPage(1)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setDataToShow(company)\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [company])\r\n\r\n    return(\r\n        <section className='loaded'>\r\n            <header className='header'>\r\n                <Link to='/companies-income/' className='header__text'><h1 className='header__text'>Companies</h1></Link>\r\n            </header>\r\n\r\n            <main className='main'>\r\n                <section className='search'>\r\n                    <input type='text' id='filter' onChange={filter} className='search__input' placeholder='Type company name here...' ></input>\r\n                </section>\r\n                <IncomeTable currentCompanies={currentCompanies} />\r\n                <Pages currentPage={currentPage} totalPages={totalPages} paginate={paginate} />\r\n            </main>\r\n\r\n            <footer className='footer'>\r\n                <p className='footer__text'>Created by Mateusz Greń, 2020</p>\r\n            </footer>\r\n\r\n            <span className='background'></span>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Loaded\r\n","const readVh = () => {\r\n    let vh = window.innerHeight * 0.01;\r\n    document.documentElement.style.setProperty('--vh', `${vh}px`);\r\n    if(window.innerHeight <= 640) {\r\n        return 3\r\n    } else if(window.innerHeight <= 840) {\r\n        return 4\r\n    } else {\r\n        return 6\r\n    }\r\n}\r\n\r\nexport default readVh","import React, { useState, useEffect } from 'react'\r\nimport { useParams, Link } from 'react-router-dom'\r\nimport './company.css'\r\n\r\nconst Company = ({data}) => {\r\n    const [incomes, setIncomes] = useState([])\r\n    const [companyInfo, setCompanyInfo] = useState([])\r\n    const { id } = useParams()\r\n    const [totalSum, setTotalSum] = useState(0)\r\n    const [totalAvg, setTotalAvg] = useState(0)\r\n    const [avg, setAvg] = useState(0)\r\n    const [sum, setSum] = useState(0)\r\n    //  Setting dates\r\n    const today = new Date()\r\n    let month, year = null\r\n\r\n    if(today.getMonth() - 1 < 0) {\r\n        month = 11\r\n        year = today.getFullYear() - 1\r\n    } else {\r\n        month = today.getMonth() - 1\r\n        year = today.getFullYear()\r\n    }\r\n\r\n    const [startDate, setStartDate] = useState(new Date(year, month, 1))\r\n    const [endDate, setEndDate] = useState(new Date(today.getFullYear(), today.getMonth(), 1))\r\n\r\n    const filterTable = (array) => {\r\n        return array.filter(el => Number(el.id) === Number(id))\r\n    }\r\n\r\n    const countTotalIncomes = () => {\r\n        if(incomes.length > 0) {\r\n            let sum = 0;\r\n            incomes[0].incomes.map(el => {\r\n                sum += parseFloat(el.value)\r\n                return el\r\n            })\r\n            const avg = sum/incomes[0].incomes.length\r\n            setTotalSum(sum.toFixed(2))\r\n            setTotalAvg(avg.toFixed(2))\r\n        }\r\n    }\r\n\r\n    const countIncomes = (startDate, endDate) => {\r\n        if(startDate <= endDate) {\r\n            const tempIncomes = incomes[0].incomes\r\n            const array = tempIncomes.filter(el => new Date(el.date) >= startDate && new Date(el.date) <= endDate)\r\n            let sum = 0\r\n            let avg = 0\r\n            if(array.length > 0) {\r\n                array.map((el) => {\r\n                    sum += parseFloat(el.value)\r\n                    return el\r\n                })\r\n                avg = sum/array.length\r\n            }\r\n            setAvg(avg.toFixed(2))\r\n            setSum(sum.toFixed(2))\r\n        } else {\r\n            setEndDate(startDate)\r\n            const tempIncomes = incomes[0].incomes\r\n            const array = tempIncomes.filter(el => new Date(el.date) >= startDate && new Date(el.date) <= endDate)\r\n            let sum = 0\r\n            let avg = 0\r\n            if(array.length > 0) {\r\n                array.map((el) => {\r\n                    sum += parseFloat(el.value)\r\n                    return el\r\n                })\r\n                avg = sum/array.length\r\n            }\r\n            setAvg(avg.toFixed(2))\r\n            setSum(sum.toFixed(2))\r\n            alert('Start date is earlier than end date (end date automatically changed to start date)')\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(incomes.length === 0)\r\n            setIncomes(filterTable(data[1]))\r\n        if(companyInfo.length === 0)\r\n            setCompanyInfo(filterTable(data[0]))\r\n        if(incomes.length > 0){\r\n            countTotalIncomes()\r\n            countIncomes(startDate, endDate)\r\n            const dateTimeFormat = new Intl.DateTimeFormat('en', { year: 'numeric', month: '2-digit', day: '2-digit' })\r\n            const [{ value: monthStart },,{ value: dayStart },,{ value: yearStart }] = dateTimeFormat.formatToParts(startDate)\r\n            const [{ value: monthEnd },,{ value: dayEnd },,{ value: yearEnd }] = dateTimeFormat.formatToParts(endDate)\r\n            document.querySelector('#startDate').value = `${yearStart}-${monthStart}-${dayStart}`\r\n            document.querySelector('#endDate').value = `${yearEnd}-${monthEnd}-${dayEnd}`\r\n        }\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [data, companyInfo, incomes, startDate, endDate])\r\n\r\n    return(\r\n        <section className='company'>\r\n            {(companyInfo.length > 0 && incomes.length > 0)?(\r\n            <div className='wrapper'>\r\n                <Link to='/companies-income/' className='company__back'>Back</Link>\r\n                <div className='dateRange'>\r\n                    <label htmlFor=\"startDate\">From:</label>\r\n                    <input type=\"date\" id=\"startDate\" name=\"startDate\" onChange={() => {setStartDate(new Date(document.querySelector('#startDate').value))}}/>\r\n                    <label htmlFor=\"endDate\">to:</label>\r\n                    <input type=\"date\" id=\"endDate\" name=\"endDate\" onChange={() => {setEndDate(new Date(document.querySelector('#endDate').value))}}/>\r\n                </div>\r\n\r\n                <div className='company__info'>\r\n                    <p>ID: {companyInfo[0].id}</p>\r\n                    <p>Name: {companyInfo[0].name}</p>\r\n                    <p>City: {companyInfo[0].city}</p>\r\n                    <p>Total income: {totalSum}</p>\r\n                    <p>Lifetime average: {totalAvg}</p>\r\n                    <p>Your range income: {sum}</p>\r\n                    <p>Your range average income: {avg}</p>\r\n                </div>\r\n            </div>):''}\r\n            <div className='background'></div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Company\r\n","import { useEffect, useRef } from 'react'\r\n\r\nfunction usePrevious(value) {\r\n    const ref = useRef();\r\n    useEffect(() => {\r\n      ref.current = value;\r\n    });\r\n    return ref.current;\r\n}\r\n\r\nexport default usePrevious\r\n","import React, { useState, useEffect } from 'react'\nimport { BrowserRouter as Router, Route, Switch} from 'react-router-dom'\nimport axios from 'axios'\nimport './App.css'\nimport LoadingScreen from './conteiners/loadingScreen/loadingScreen'\nimport Loaded from './conteiners/loaded/loaded'\nimport readVh from './helper/readingVh.js'\nimport Company from './conteiners/company/company'\nimport usePrevious from './helper/usePrevious.js'\n\nconst App = () => {\n  const [companies, setCompanies] = useState([])\n  const [incomes, setIncomes] = useState([])\n  const [sorted, setSorted] = useState(false)\n  const [numberOfItems, setNumberOfItems] = useState(5)\n  const [loading, setLoading] = useState(true)\n\n  //  Getting data from first API (city, id, name), data save into state.companiesArray\n  const getSummaryData = async () => {\n    let array = []\n\n    try {\n      const response = await fetch(`https://recruitment.hal.skygate.io/companies`);\n      if (response.ok) {\n        array = await response.json();\n      }\n    } catch (error) {\n      console.error(error);\n    }\n    setCompanies(array)\n  }\n\n  //  Getting data from second API (id, incomes {date, value})\n  const getIncomeData = async () => {\n    if (companies.length > 0) {\n      Promise.all(\n        companies.map(\n          el => axios(`https://recruitment.hal.skygate.io/incomes/${el.id}`)\n        )\n      ).then(\n        responses => Promise.all(\n          responses.map(\n            res => res.data\n          )\n        ).then(\n          data => {\n            const filtered = data.filter(el => {\n              return el !== \"\"\n            })\n            setIncomes(filtered)\n          }\n        )\n      ).catch(error =>\n        console.error(error)\n      )\n    }\n  }\n\n  //  Count total incomes and insert them to each object in companies\n  const countTotalIncomes = () => {\n    const newCompanies = []\n    companies.map((company) => {\n      let sum = 0;\n      const income = incomes.find(el =>\n        el.id === company.id)\n\n      income.incomes.map(el => {\n        sum += parseFloat(el.value)\n        return el\n      })\n      newCompanies.push({\n        ...company,\n        totalIncome: sum.toFixed(2)\n      })\n\n      return company\n    })\n\n    setCompanies(newCompanies)\n    setLoading(false)\n  }\n\n  //  Sorting state.companies by totalIncome desc\n  const sortArrayByTotalIncome = () => {\n    const sortedArray = companies.sort((a, b) => {\n      return b.totalIncome - a.totalIncome\n    })\n    setCompanies(sortedArray)\n    setSorted(true)\n  }\n\n  //  Download data from first API, calculate vh and calculate numberOfItems\n  const prevCompanies = usePrevious(companies)\n  const prevIncomes = usePrevious(incomes)\n  useEffect(() => {\n    window.addEventListener('resize', () => {\n      readVh()\n    })\n    if(companies.length === 0) {\n      getSummaryData()\n      setNumberOfItems(readVh())\n    }\n    //  Get income data after getting companies\n    if (prevCompanies) {\n      if (prevCompanies.length !== companies.length) {\n        if (companies.length > 0) {\n          getIncomeData(companies)\n        }\n      }\n    }\n\n    //  Count total incomes after getting incomes\n    if(prevIncomes) {\n      if (prevIncomes.length !== incomes.length && incomes.length > 0) {\n        countTotalIncomes()\n      }\n    }\n\n    //  Sort companies after total incomes count\n    if (companies.length > 0) {\n      if (!loading && !sorted && companies[0].totalIncome) {\n        sortArrayByTotalIncome()\n      }\n    }\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [companies, incomes])\n\n  return(\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route exact path='/'>\n            {(sorted)?<Loaded company={companies} numberOfItems={numberOfItems} />:<LoadingScreen />}\n          </Route>\n          <Route exact path='/companies-income/'>\n            {(sorted)?<Loaded company={companies} numberOfItems={numberOfItems} />:<LoadingScreen />}\n          </Route>\n          <Route path='/company/:id'>\n            {(sorted)?<Company data={[companies, incomes]} />:<LoadingScreen />}\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}