{"version":3,"sources":["conteiners/loadingScreen/loadingScreen.js","images/open white.svg","components/tableItem/tableItem.js","conteiners/incomeTable/incomeTable.js","components/pages/pages.js","conteiners/loaded/loaded.js","helper/readingVh.js","conteiners/company/company.js","helper/usePrevious.js","App.js","serviceWorker.js","index.js"],"names":["LoadingScreen","slowConnection","document","querySelector","innerText","useEffect","slowConnectionTimeout","setTimeout","clearTimeout","className","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","id","x","y","width","height","xlinkHref","_ref","svgRef","title","props","viewBox","ref","ForwardRef","forwardRef","TableItem","name","city","totalIncome","to","IncomeTable","currentCompanies","map","el","Pages","currentPage","totalPages","paginate","pageNumbers","push","number","index","onClick","Loaded","company","numberOfItems","useState","setCurrentPage","companiesPerPage","dataToShow","setDataToShow","indexOfLastPost","indexOfFirstPost","slice","Math","ceil","type","onChange","filterValue","value","result","filter","toUpperCase","placeholder","pageNumber","readVh","vh","window","innerHeight","documentElement","style","setProperty","Company","month","data","incomes","setIncomes","companyInfo","setCompanyInfo","useParams","totalSum","setTotalSum","totalAvg","setTotalAvg","avg","setAvg","sum","setSum","today","Date","year","getMonth","getFullYear","startDate","setStartDate","endDate","setEndDate","filterTable","array","Number","parseFloat","toFixed","countTotalIncomes","date","alert","countIncomes","dateTimeFormat","Intl","DateTimeFormat","day","formatToParts","monthStart","dayStart","yearStart","monthEnd","dayEnd","yearEnd","htmlFor","usePrevious","useRef","current","App","companies","setCompanies","sorted","setSorted","setNumberOfItems","loading","setLoading","getSummaryData","a","fetch","response","ok","json","console","error","getIncomeData","Promise","all","axios","then","responses","res","filtered","catch","prevCompanies","prevIncomes","addEventListener","newCompanies","find","sortedArray","sort","b","sortArrayByTotalIncome","exact","path","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.2cb03794.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport \"./loadingScreen.css\";\r\n\r\nconst LoadingScreen = () => {\r\n  //  adding information on loading screen\r\n  const slowConnection = () => {\r\n    document.querySelector(\".loadingScreen__info\").innerText =\r\n      \"Your connection is slow, please wait a moment\";\r\n  };\r\n\r\n  useEffect(() => {\r\n    //  set timeout on mount\r\n    let slowConnectionTimeout = setTimeout(slowConnection, 16000);\r\n\r\n    //  clear timeout on unmount\r\n    return () => clearTimeout(slowConnectionTimeout);\r\n  }, []);\r\n\r\n  return (\r\n    <section className=\"loadingScreen\">\r\n      <div className=\"loadingScreen__title\">Loading</div>\r\n      <div className=\"loadingScreen__info\"></div>\r\n      <span className=\"loadingScreen__animation\">\r\n        <div className=\"element1\"></div>\r\n        <div className=\"element2\"></div>\r\n        <div className=\"element3\"></div>\r\n        <div className=\"element4\"></div>\r\n        <div className=\"element5\"></div>\r\n      </span>\r\n      <div className=\"background background__first\"></div>\r\n      <div className=\"background background__second\"></div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default LoadingScreen;\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"image\", {\n  id: \"Warstwa_1\",\n  \"data-name\": \"Warstwa 1\",\n  x: 20,\n  y: 20,\n  width: 160,\n  height: 160,\n  xlinkHref: \"data:img/png;base64,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\"\n});\n\nvar SvgOpenwhite = function SvgOpenwhite(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 200,\n    height: 200,\n    viewBox: \"0 0 200 200\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgOpenwhite, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/open white.5c3c13c7.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./tableItem.css\";\r\nimport { ReactComponent as OpenSite } from \"../../images/open white.svg\";\r\n\r\nconst TableItem = (props) => {\r\n  return (\r\n    <div className=\"tableItem\">\r\n      <div className=\"wrapper\">\r\n        <div className=\"elements\">\r\n          <p className=\"tableItem__element\">{props.id}</p>\r\n          <p className=\"tableItem__element\">{props.name}</p>\r\n        </div>\r\n        <div className=\"elements\">\r\n          <p className=\"tableItem__element\">{props.city}</p>\r\n          <p className=\"tableItem__element\">{props.totalIncome}</p>\r\n        </div>\r\n      </div>\r\n      <Link to={`/company/${props.id}`} className=\"tableItem__open\">\r\n        <OpenSite className=\"tableItem__open\" />\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TableItem;\r\n","import React from \"react\";\r\nimport \"./incomeTable.css\";\r\nimport TableItem from \"../../components/tableItem/tableItem\";\r\n\r\nconst IncomeTable = ({ currentCompanies }) => {\r\n  return (\r\n    <section className=\"incomeTable\">\r\n      <ul className=\"table\">\r\n        {currentCompanies.length !== 0 ? (\r\n          currentCompanies.map((el) => (\r\n            <TableItem\r\n              key={el.id}\r\n              id={el.id}\r\n              name={el.name}\r\n              city={el.city}\r\n              totalIncome={el.totalIncome}\r\n            />\r\n          ))\r\n        ) : (\r\n          <p className=\"table__error\">Nothing to show</p>\r\n        )}\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default IncomeTable;\r\n","import React from \"react\";\r\nimport \"./pages.css\";\r\n\r\nconst Pages = ({ currentPage, totalPages, paginate }) => {\r\n  const pageNumbers = [];\r\n  if (totalPages >= 5) {\r\n    if (currentPage - 2 > 1 && currentPage + 2 < totalPages) {\r\n      for (let i = currentPage - 2; i <= currentPage + 2; i++) {\r\n        pageNumbers.push(i);\r\n      }\r\n    } else if (currentPage - 2 <= 1 && currentPage + 1 < totalPages) {\r\n      for (let i = 1; i <= 5; i++) {\r\n        pageNumbers.push(i);\r\n      }\r\n    } else if (currentPage - 2 > 1 && currentPage + 2 >= totalPages) {\r\n      for (let i = totalPages - 4; i <= totalPages; i++) {\r\n        pageNumbers.push(i);\r\n      }\r\n    }\r\n  } else {\r\n    for (let i = 1; i <= totalPages; i++) {\r\n      pageNumbers.push(i);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <nav>\r\n      <ul className=\"pages\">\r\n        {pageNumbers.map((number, index) => (\r\n          <li\r\n            onClick={() => paginate(number)}\r\n            key={number}\r\n            className={\r\n              number === currentPage\r\n                ? \"pages__number pages__number--current\"\r\n                : \"pages__number\"\r\n            }\r\n          >\r\n            <p\r\n              className={\r\n                number === currentPage\r\n                  ? \"pages__item pages__item--current\"\r\n                  : \"pages__item\"\r\n              }\r\n            >\r\n              {number}\r\n            </p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Pages;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./loaded.css\";\r\nimport IncomeTable from \"../incomeTable/incomeTable\";\r\nimport Pages from \"../../components/pages/pages\";\r\n\r\nconst Loaded = ({ company, numberOfItems }) => {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [companiesPerPage] = useState(numberOfItems); //   Read from readVh in readingVh.js\r\n  const [dataToShow, setDataToShow] = useState([]);\r\n\r\n  const indexOfLastPost = currentPage * companiesPerPage;\r\n  const indexOfFirstPost = indexOfLastPost - companiesPerPage;\r\n  const currentCompanies = dataToShow.slice(indexOfFirstPost, indexOfLastPost);\r\n  const totalPages = Math.ceil(dataToShow.length / companiesPerPage);\r\n\r\n  //  Change page\r\n  const paginate = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  //  Filter results\r\n  const filter = () => {\r\n    const filterValue = document.querySelector(\"#filter\").value;\r\n    if (filterValue.length > 0) {\r\n      const result = company.filter(\r\n        (company) =>\r\n          company.name.toUpperCase().indexOf(filterValue.toUpperCase()) !== -1\r\n      );\r\n      setDataToShow(result);\r\n      setCurrentPage(1);\r\n    } else {\r\n      setDataToShow(company);\r\n      setCurrentPage(1);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setDataToShow(company);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [company]);\r\n\r\n  return (\r\n    <section className=\"loaded\">\r\n      <header className=\"header\">\r\n        <Link to=\"/companies-income/\" className=\"header__text\">\r\n          <h1 className=\"header__text\">Companies</h1>\r\n        </Link>\r\n      </header>\r\n\r\n      <main className=\"main\">\r\n        <section className=\"search\">\r\n          <input\r\n            type=\"text\"\r\n            id=\"filter\"\r\n            onChange={filter}\r\n            className=\"search__input\"\r\n            placeholder=\"Type company name here...\"\r\n          ></input>\r\n        </section>\r\n        <IncomeTable currentCompanies={currentCompanies} />\r\n        <Pages\r\n          currentPage={currentPage}\r\n          totalPages={totalPages}\r\n          paginate={paginate}\r\n        />\r\n      </main>\r\n\r\n      <footer className=\"footer\">\r\n        <p className=\"footer__text\">Created by Mateusz Greń, 2020</p>\r\n      </footer>\r\n\r\n      <span className=\"background\"></span>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Loaded;\r\n","const readVh = () => {\r\n  let vh = window.innerHeight * 0.01;\r\n  document.documentElement.style.setProperty(\"--vh\", `${vh}px`);\r\n  if (window.innerHeight <= 640) {\r\n    return 3;\r\n  } else if (window.innerHeight <= 840) {\r\n    return 4;\r\n  } else {\r\n    return 6;\r\n  }\r\n};\r\n\r\nexport default readVh;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport \"./company.css\";\r\n\r\nconst Company = ({ data }) => {\r\n  const [incomes, setIncomes] = useState([]);\r\n  const [companyInfo, setCompanyInfo] = useState([]);\r\n  const { id } = useParams();\r\n  const [totalSum, setTotalSum] = useState(0);\r\n  const [totalAvg, setTotalAvg] = useState(0);\r\n  const [avg, setAvg] = useState(0);\r\n  const [sum, setSum] = useState(0);\r\n  //  Setting dates\r\n  const today = new Date();\r\n  let month,\r\n    year = null;\r\n\r\n  if (today.getMonth() - 1 < 0) {\r\n    month = 11;\r\n    year = today.getFullYear() - 1;\r\n  } else {\r\n    month = today.getMonth() - 1;\r\n    year = today.getFullYear();\r\n  }\r\n\r\n  const [startDate, setStartDate] = useState(new Date(year, month, 1));\r\n  const [endDate, setEndDate] = useState(\r\n    new Date(today.getFullYear(), today.getMonth(), 1)\r\n  );\r\n\r\n  const filterTable = (array) => {\r\n    return array.filter((el) => Number(el.id) === Number(id));\r\n  };\r\n\r\n  const countTotalIncomes = () => {\r\n    if (incomes.length > 0) {\r\n      let sum = 0;\r\n      incomes[0].incomes.map((el) => {\r\n        sum += parseFloat(el.value);\r\n        return el;\r\n      });\r\n      const avg = sum / incomes[0].incomes.length;\r\n      setTotalSum(sum.toFixed(2));\r\n      setTotalAvg(avg.toFixed(2));\r\n    }\r\n  };\r\n\r\n  const countIncomes = (startDate, endDate) => {\r\n    if (startDate <= endDate) {\r\n      const tempIncomes = incomes[0].incomes;\r\n      const array = tempIncomes.filter(\r\n        (el) => new Date(el.date) >= startDate && new Date(el.date) <= endDate\r\n      );\r\n      let sum = 0;\r\n      let avg = 0;\r\n      if (array.length > 0) {\r\n        array.map((el) => {\r\n          sum += parseFloat(el.value);\r\n          return el;\r\n        });\r\n        avg = sum / array.length;\r\n      }\r\n      setAvg(avg.toFixed(2));\r\n      setSum(sum.toFixed(2));\r\n    } else {\r\n      setEndDate(startDate);\r\n      const tempIncomes = incomes[0].incomes;\r\n      const array = tempIncomes.filter(\r\n        (el) => new Date(el.date) >= startDate && new Date(el.date) <= endDate\r\n      );\r\n      let sum = 0;\r\n      let avg = 0;\r\n      if (array.length > 0) {\r\n        array.map((el) => {\r\n          sum += parseFloat(el.value);\r\n          return el;\r\n        });\r\n        avg = sum / array.length;\r\n      }\r\n      setAvg(avg.toFixed(2));\r\n      setSum(sum.toFixed(2));\r\n      alert(\r\n        \"Start date is earlier than end date (end date automatically changed to start date)\"\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (incomes.length === 0) setIncomes(filterTable(data[1]));\r\n    if (companyInfo.length === 0) setCompanyInfo(filterTable(data[0]));\r\n    if (incomes.length > 0) {\r\n      countTotalIncomes();\r\n      countIncomes(startDate, endDate);\r\n      const dateTimeFormat = new Intl.DateTimeFormat(\"en\", {\r\n        year: \"numeric\",\r\n        month: \"2-digit\",\r\n        day: \"2-digit\",\r\n      });\r\n      const [\r\n        { value: monthStart },\r\n        ,\r\n        { value: dayStart },\r\n        ,\r\n        { value: yearStart },\r\n      ] = dateTimeFormat.formatToParts(startDate);\r\n      const [\r\n        { value: monthEnd },\r\n        ,\r\n        { value: dayEnd },\r\n        ,\r\n        { value: yearEnd },\r\n      ] = dateTimeFormat.formatToParts(endDate);\r\n      document.querySelector(\r\n        \"#startDate\"\r\n      ).value = `${yearStart}-${monthStart}-${dayStart}`;\r\n      document.querySelector(\r\n        \"#endDate\"\r\n      ).value = `${yearEnd}-${monthEnd}-${dayEnd}`;\r\n    }\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [data, companyInfo, incomes, startDate, endDate]);\r\n\r\n  return (\r\n    <section className=\"company\">\r\n      {companyInfo.length > 0 && incomes.length > 0 ? (\r\n        <div className=\"wrapper\">\r\n          <Link to=\"/companies-income/\" className=\"company__back\">\r\n            Back\r\n          </Link>\r\n          <div className=\"dateRange\">\r\n            <label htmlFor=\"startDate\">From:</label>\r\n            <input\r\n              type=\"date\"\r\n              id=\"startDate\"\r\n              name=\"startDate\"\r\n              onChange={() => {\r\n                setStartDate(\r\n                  new Date(document.querySelector(\"#startDate\").value)\r\n                );\r\n              }}\r\n            />\r\n            <label htmlFor=\"endDate\">to:</label>\r\n            <input\r\n              type=\"date\"\r\n              id=\"endDate\"\r\n              name=\"endDate\"\r\n              onChange={() => {\r\n                setEndDate(new Date(document.querySelector(\"#endDate\").value));\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"company__info\">\r\n            <p>ID: {companyInfo[0].id}</p>\r\n            <p>Name: {companyInfo[0].name}</p>\r\n            <p>City: {companyInfo[0].city}</p>\r\n            <p>Total income: {totalSum}</p>\r\n            <p>Lifetime average: {totalAvg}</p>\r\n            <p>Your range income: {sum}</p>\r\n            <p>Your range average income: {avg}</p>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <div className=\"background\"></div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Company;\r\n","import { useEffect, useRef } from \"react\";\r\n\r\nfunction usePrevious(value) {\r\n  const ref = useRef();\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  });\r\n  return ref.current;\r\n}\r\n\r\nexport default usePrevious;\r\n","import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport LoadingScreen from \"./conteiners/loadingScreen/loadingScreen\";\nimport Loaded from \"./conteiners/loaded/loaded\";\nimport readVh from \"./helper/readingVh.js\";\nimport Company from \"./conteiners/company/company\";\nimport usePrevious from \"./helper/usePrevious.js\";\n\nconst App = () => {\n  const [companies, setCompanies] = useState([]);\n  const [incomes, setIncomes] = useState([]);\n  const [sorted, setSorted] = useState(false);\n  const [numberOfItems, setNumberOfItems] = useState(5);\n  const [loading, setLoading] = useState(true);\n\n  //  Getting data from first API (city, id, name), data save into state.companiesArray\n  const getSummaryData = async () => {\n    let array = [];\n\n    try {\n      const response = await fetch(\n        `https://recruitment.hal.skygate.io/companies`\n      );\n      if (response.ok) {\n        array = await response.json();\n      }\n    } catch (error) {\n      console.error(error);\n    }\n    setCompanies(array);\n  };\n\n  //  Getting data from second API (id, incomes {date, value})\n  const getIncomeData = async () => {\n    if (companies.length > 0) {\n      Promise.all(\n        companies.map((el) =>\n          axios(`https://recruitment.hal.skygate.io/incomes/${el.id}`)\n        )\n      )\n        .then((responses) =>\n          Promise.all(responses.map((res) => res.data)).then((data) => {\n            const filtered = data.filter((el) => {\n              return el !== \"\";\n            });\n            setIncomes(filtered);\n          })\n        )\n        .catch((error) => console.error(error));\n    }\n  };\n\n  //  Count total incomes and insert them to each object in companies\n  const countTotalIncomes = () => {\n    const newCompanies = [];\n    companies.map((company) => {\n      let sum = 0;\n      const income = incomes.find((el) => el.id === company.id);\n\n      income.incomes.map((el) => {\n        sum += parseFloat(el.value);\n        return el;\n      });\n      newCompanies.push({\n        ...company,\n        totalIncome: sum.toFixed(2),\n      });\n\n      return company;\n    });\n\n    setCompanies(newCompanies);\n    setLoading(false);\n  };\n\n  //  Sorting state.companies by totalIncome desc\n  const sortArrayByTotalIncome = () => {\n    const sortedArray = companies.sort((a, b) => {\n      return b.totalIncome - a.totalIncome;\n    });\n    setCompanies(sortedArray);\n    setSorted(true);\n  };\n\n  //  Download data from first API, calculate vh and calculate numberOfItems\n  const prevCompanies = usePrevious(companies);\n  const prevIncomes = usePrevious(incomes);\n  useEffect(() => {\n    window.addEventListener(\"resize\", () => {\n      readVh();\n    });\n    if (companies.length === 0) {\n      getSummaryData();\n      setNumberOfItems(readVh());\n    }\n    //  Get income data after getting companies\n    if (prevCompanies) {\n      if (prevCompanies.length !== companies.length) {\n        if (companies.length > 0) {\n          getIncomeData(companies);\n        }\n      }\n    }\n\n    //  Count total incomes after getting incomes\n    if (prevIncomes) {\n      if (prevIncomes.length !== incomes.length && incomes.length > 0) {\n        countTotalIncomes();\n      }\n    }\n\n    //  Sort companies after total incomes count\n    if (companies.length > 0) {\n      if (!loading && !sorted && companies[0].totalIncome) {\n        sortArrayByTotalIncome();\n      }\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [companies, incomes]);\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/\">\n            {sorted ? (\n              <Loaded company={companies} numberOfItems={numberOfItems} />\n            ) : (\n              <LoadingScreen />\n            )}\n          </Route>\n          <Route exact path=\"/companies-income/\">\n            {sorted ? (\n              <Loaded company={companies} numberOfItems={numberOfItems} />\n            ) : (\n              <LoadingScreen />\n            )}\n          </Route>\n          <Route path=\"/company/:id\">\n            {sorted ? (\n              <Company data={[companies, incomes]} />\n            ) : (\n              <LoadingScreen />\n            )}\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWAF\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}