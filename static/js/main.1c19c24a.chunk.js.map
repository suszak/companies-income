{"version":3,"sources":["helper/infoAboutSlowConnection.js","conteiners/loadingScreen/loadingScreen.js","images/open white.svg","components/tableItem/tableItem.js","conteiners/incomeTable/incomeTable.js","components/pages/pages.js","conteiners/loaded/loaded.js","helper/filterResults.js","helper/readingVh.js","helper/calculateIncomes.js","conteiners/company/company.js","helper/usePrevious.js","helper/gettingData.js","App.js","serviceWorker.js","index.js"],"names":["slowConnection","document","querySelector","innerText","LoadingScreen","useEffect","slowConnectionTimeout","setTimeout","clearTimeout","className","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","id","x","y","width","height","xlinkHref","_ref","svgRef","title","props","viewBox","ref","ForwardRef","forwardRef","TableItem","name","city","totalIncome","to","IncomeTable","currentCompanies","map","el","Pages","currentPage","totalPages","paginate","useState","pageNumbers","setPageNumbers","Array","fill","number","index","onClick","Loaded","company","numberOfItems","setCurrentPage","companiesPerPage","dataToShow","setDataToShow","indexOfLastPost","indexOfFirstPost","slice","Math","ceil","type","onChange","filterValue","value","filter","toUpperCase","placeholder","pageNumber","readVh","vh","window","innerHeight","documentElement","style","setProperty","calculateSumAndAvg","setSum","setAvg","incomes","startDate","endDate","array","Date","date","sum","avg","reduce","previous","current","parseFloat","toFixed","Company","month","data","setIncomes","companyInfo","setCompanyInfo","useParams","totalSum","setTotalSum","totalAvg","setTotalAvg","today","year","getMonth","getFullYear","setStartDate","setEndDate","filterTable","Number","calculateTotalIncomes","store","addNotification","message","insert","container","dismiss","duration","onScreen","calculateIncomes","dateTimeFormat","Intl","DateTimeFormat","day","formatToParts","monthStart","dayStart","yearStart","monthEnd","dayEnd","yearEnd","htmlFor","usePrevious","useRef","getSummaryData","setCompanies","a","fetch","response","ok","json","console","error","getIncomeData","companies","Promise","all","axios","then","responses","res","filtered","catch","App","sorted","setSorted","setNumberOfItems","loading","setLoading","prevCompanies","prevIncomes","addEventListener","find","income","sort","b","sortArrayByTotalIncome","exact","path","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1c19c24a.chunk.js","sourcesContent":["//  adding information on loading screen\r\nexport const slowConnection = () => {\r\n  document.querySelector(\".loadingScreen__info\").innerText =\r\n    \"Your connection is slow, please wait a moment\";\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport \"./loadingScreen.css\";\r\nimport { slowConnection } from \"../../helper/infoAboutSlowConnection.js\"\r\n\r\nconst LoadingScreen = () => {\r\n  useEffect(() => {\r\n    //  set timeout on mount\r\n    let slowConnectionTimeout = setTimeout(slowConnection, 16000);\r\n\r\n    //  clear timeout on unmount\r\n    return () => clearTimeout(slowConnectionTimeout);\r\n  }, []);\r\n\r\n  return (\r\n    <section className=\"loadingScreen\">\r\n      <div className=\"loadingScreen__title\">Loading</div>\r\n      <div className=\"loadingScreen__info\"></div>\r\n      <span className=\"loadingScreen__animation\">\r\n        <div className=\"element1\"></div>\r\n        <div className=\"element2\"></div>\r\n        <div className=\"element3\"></div>\r\n        <div className=\"element4\"></div>\r\n        <div className=\"element5\"></div>\r\n      </span>\r\n      <div className=\"background background__first\"></div>\r\n      <div className=\"background background__second\"></div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default LoadingScreen;\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"image\", {\n  id: \"Warstwa_1\",\n  \"data-name\": \"Warstwa 1\",\n  x: 20,\n  y: 20,\n  width: 160,\n  height: 160,\n  xlinkHref: \"data:img/png;base64,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\"\n});\n\nvar SvgOpenwhite = function SvgOpenwhite(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 200,\n    height: 200,\n    viewBox: \"0 0 200 200\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgOpenwhite, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/open white.5c3c13c7.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./tableItem.css\";\r\nimport { ReactComponent as OpenSite } from \"../../images/open white.svg\";\r\n\r\nconst TableItem = ({ id, name, city, totalIncome }) => {\r\n  return (\r\n    <div className=\"tableItem\">\r\n      <div className=\"wrapper\">\r\n        <div className=\"elements\">\r\n          <p className=\"tableItem__element\">{id}</p>\r\n          <p className=\"tableItem__element\">{name}</p>\r\n        </div>\r\n        <div className=\"elements\">\r\n          <p className=\"tableItem__element\">{city}</p>\r\n          <p className=\"tableItem__element\">{totalIncome}</p>\r\n        </div>\r\n      </div>\r\n      <Link to={`/company/${id}`} className=\"tableItem__open\">\r\n        <OpenSite className=\"tableItem__open\" />\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TableItem;\r\n","import React from \"react\";\r\nimport \"./incomeTable.css\";\r\nimport TableItem from \"../../components/tableItem/tableItem\";\r\n\r\nconst IncomeTable = ({ currentCompanies }) => {\r\n  return (\r\n    <section className=\"incomeTable\">\r\n      <ul className=\"table\">\r\n        {currentCompanies.length !== 0 ? (\r\n          currentCompanies.map((el) => (\r\n            <TableItem\r\n              key={el.id}\r\n              id={el.id}\r\n              name={el.name}\r\n              city={el.city}\r\n              totalIncome={el.totalIncome}\r\n            />\r\n          ))\r\n        ) : (\r\n          <p className=\"table__error\">Nothing to show</p>\r\n        )}\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default IncomeTable;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./pages.css\";\r\n\r\nconst Pages = ({ currentPage, totalPages, paginate }) => {\r\n  // let pageNumbers = [];\r\n  const [pageNumbers, setPageNumbers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (totalPages >= 5) {\r\n      if (currentPage - 2 > 1 && currentPage + 2 < totalPages) {\r\n        setPageNumbers(\r\n          Array(5)\r\n            .fill(currentPage - 2)\r\n            .map((number, index) => number + index)\r\n        );\r\n      } else if (currentPage - 2 <= 1 && currentPage + 1 < totalPages) {\r\n        setPageNumbers(\r\n          Array(5)\r\n            .fill(1)\r\n            .map((number, index) => number + index)\r\n        );\r\n      } else if (currentPage - 2 > 1 && currentPage + 2 >= totalPages) {\r\n        setPageNumbers(\r\n          Array(5)\r\n            .fill(totalPages - 4)\r\n            .map((number, index) => number + index)\r\n        );\r\n      }\r\n    } else {\r\n      setPageNumbers(\r\n        Array(totalPages)\r\n          .fill(1)\r\n          .map((number, index) => number + index)\r\n      );\r\n    }\r\n  }, [currentPage, totalPages]);\r\n\r\n  return (\r\n    <nav>\r\n      <ul className=\"pages\">\r\n        {pageNumbers.map((number) => (\r\n          <li\r\n            onClick={() => paginate(number)}\r\n            key={number}\r\n            className={\r\n              number === currentPage\r\n                ? \"pages__number pages__number--current\"\r\n                : \"pages__number\"\r\n            }\r\n          >\r\n            <p\r\n              className={\r\n                number === currentPage\r\n                  ? \"pages__item pages__item--current\"\r\n                  : \"pages__item\"\r\n              }\r\n            >\r\n              {number}\r\n            </p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Pages;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./loaded.css\";\r\nimport IncomeTable from \"../incomeTable/incomeTable\";\r\nimport Pages from \"../../components/pages/pages\";\r\nimport { filter } from \"../../helper/filterResults.js\";\r\n\r\nconst Loaded = ({ company, numberOfItems }) => {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [companiesPerPage] = useState(numberOfItems); //   Read from readVh in readingVh.js\r\n  const [dataToShow, setDataToShow] = useState([]);\r\n\r\n  const indexOfLastPost = currentPage * companiesPerPage;\r\n  const indexOfFirstPost = indexOfLastPost - companiesPerPage;\r\n  const currentCompanies = dataToShow.slice(indexOfFirstPost, indexOfLastPost);\r\n  const totalPages = Math.ceil(dataToShow.length / companiesPerPage);\r\n\r\n  //  Change page\r\n  const paginate = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setDataToShow(company);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [company]);\r\n\r\n  return (\r\n    <section className=\"loaded\">\r\n      <header className=\"header\">\r\n        <Link to=\"/companies-income/\" className=\"header__text\">\r\n          <h1 className=\"header__text\">Companies</h1>\r\n        </Link>\r\n      </header>\r\n\r\n      <main className=\"main\">\r\n        <section className=\"search\">\r\n          <input\r\n            type=\"text\"\r\n            id=\"filter\"\r\n            onChange={() => filter(company, setDataToShow, setCurrentPage)}\r\n            className=\"search__input\"\r\n            placeholder=\"Type company name here...\"\r\n          ></input>\r\n        </section>\r\n        <IncomeTable currentCompanies={currentCompanies} />\r\n        <Pages\r\n          currentPage={currentPage}\r\n          totalPages={totalPages}\r\n          paginate={paginate}\r\n        />\r\n      </main>\r\n\r\n      <footer className=\"footer\">\r\n        <p className=\"footer__text\">Created by Mateusz Greń, 2020</p>\r\n      </footer>\r\n\r\n      <span className=\"background\"></span>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Loaded;\r\n","//  Filter results\r\nexport const filter = (company, setDataToShow, setCurrentPage) => {\r\n  const filterValue = document.querySelector(\"#filter\").value;\r\n  if (filterValue.length > 0) {\r\n    const result = company.filter(\r\n      (company) =>\r\n        company.name.toUpperCase().indexOf(filterValue.toUpperCase()) !== -1\r\n    );\r\n    setDataToShow(result);\r\n    setCurrentPage(1);\r\n  } else {\r\n    setDataToShow(company);\r\n    setCurrentPage(1);\r\n  }\r\n};\r\n","const readVh = () => {\r\n  let vh = window.innerHeight * 0.01;\r\n  document.documentElement.style.setProperty(\"--vh\", `${vh}px`);\r\n  if (window.innerHeight <= 640) {\r\n    return 3;\r\n  } else if (window.innerHeight <= 840) {\r\n    return 4;\r\n  } else {\r\n    return 6;\r\n  }\r\n};\r\n\r\nexport default readVh;\r\n","import { store } from \"react-notifications-component\";\r\n\r\nconst calculateSumAndAvg = (setSum, setAvg, incomes, startDate, endDate) => {\r\n  const tempIncomes = incomes[0].incomes;\r\n  const array = tempIncomes.filter(\r\n    (el) => new Date(el.date) >= startDate && new Date(el.date) <= endDate\r\n  );\r\n  let sum = 0;\r\n  let avg = 0;\r\n  if (array.length > 0) {\r\n    sum = array.reduce((previous, current) => {\r\n      return previous + parseFloat(current.value);\r\n    }, 0);\r\n    avg = sum / array.length;\r\n  }\r\n  setAvg(avg.toFixed(2));\r\n  setSum(sum.toFixed(2));\r\n};\r\n\r\nexport const calculateIncomes = (\r\n  startDate,\r\n  endDate,\r\n  incomes,\r\n  setAvg,\r\n  setSum,\r\n  setEndDate\r\n) => {\r\n  if (startDate <= endDate) {\r\n    calculateSumAndAvg(setSum, setAvg, incomes, startDate, endDate);\r\n  } else {\r\n    setEndDate(startDate);\r\n\r\n    calculateSumAndAvg(setSum, setAvg, incomes, startDate, endDate);\r\n\r\n    store.addNotification({\r\n      title: \"Date changed\",\r\n      message: \"End date automatically set as start date.\",\r\n      type: \"info\",\r\n      insert: \"top\",\r\n      container: \"top-right\",\r\n      dismiss: {\r\n        duration: 5000,\r\n        onScreen: true,\r\n      },\r\n    });\r\n\r\n    store.addNotification({\r\n      title: \"Bad dates\",\r\n      message: \"Start date is earlier than end date!\",\r\n      type: \"danger\",\r\n      insert: \"top\",\r\n      container: \"top-right\",\r\n      dismiss: {\r\n        duration: 5000,\r\n        onScreen: true,\r\n      },\r\n    });\r\n  }\r\n};\r\n\r\nexport const calculateTotalIncomes = (incomes, setTotalSum, setTotalAvg) => {\r\n  if (incomes.length > 0) {\r\n    let sum = incomes[0].incomes.reduce((previous, current) => {\r\n      return previous + parseFloat(current.value);\r\n    }, 0);\r\n\r\n    const avg = sum / incomes[0].incomes.length;\r\n    setTotalSum(sum.toFixed(2));\r\n    setTotalAvg(avg.toFixed(2));\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport \"./company.css\";\r\nimport {\r\n  calculateIncomes,\r\n  calculateTotalIncomes,\r\n} from \"../../helper/calculateIncomes.js\";\r\n\r\nconst Company = ({ data }) => {\r\n  const [incomes, setIncomes] = useState([]);\r\n  const [companyInfo, setCompanyInfo] = useState([]);\r\n  const { id } = useParams();\r\n  const [totalSum, setTotalSum] = useState(0);\r\n  const [totalAvg, setTotalAvg] = useState(0);\r\n  const [avg, setAvg] = useState(0);\r\n  const [sum, setSum] = useState(0);\r\n\r\n  //  Setting dates\r\n  const today = new Date();\r\n  let month,\r\n    year = null;\r\n\r\n  if (today.getMonth() - 1 < 0) {\r\n    month = 11;\r\n    year = today.getFullYear() - 1;\r\n  } else {\r\n    month = today.getMonth() - 1;\r\n    year = today.getFullYear();\r\n  }\r\n\r\n  const [startDate, setStartDate] = useState(new Date(year, month, 1));\r\n  const [endDate, setEndDate] = useState(\r\n    new Date(today.getFullYear(), today.getMonth(), 1)\r\n  );\r\n\r\n  //  Returns choosen company from data array\r\n  const filterTable = (array) => {\r\n    return array.filter((el) => Number(el.id) === Number(id));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (incomes.length === 0) setIncomes(filterTable(data[1]));\r\n    if (companyInfo.length === 0) setCompanyInfo(filterTable(data[0]));\r\n    if (incomes.length > 0) {\r\n      calculateTotalIncomes(incomes, setTotalSum, setTotalAvg);\r\n      calculateIncomes(startDate, endDate, incomes, setAvg, setSum, setEndDate);\r\n      const dateTimeFormat = new Intl.DateTimeFormat(\"en\", {\r\n        year: \"numeric\",\r\n        month: \"2-digit\",\r\n        day: \"2-digit\",\r\n      });\r\n      const [\r\n        { value: monthStart },\r\n        ,\r\n        { value: dayStart },\r\n        ,\r\n        { value: yearStart },\r\n      ] = dateTimeFormat.formatToParts(startDate);\r\n      const [\r\n        { value: monthEnd },\r\n        ,\r\n        { value: dayEnd },\r\n        ,\r\n        { value: yearEnd },\r\n      ] = dateTimeFormat.formatToParts(endDate);\r\n      document.querySelector(\r\n        \"#startDate\"\r\n      ).value = `${yearStart}-${monthStart}-${dayStart}`;\r\n      document.querySelector(\r\n        \"#endDate\"\r\n      ).value = `${yearEnd}-${monthEnd}-${dayEnd}`;\r\n    }\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [data, companyInfo, incomes, startDate, endDate]);\r\n\r\n  return (\r\n    <section className=\"company\">\r\n      {companyInfo.length > 0 && incomes.length > 0 ? (\r\n        <div className=\"wrapper\">\r\n          <Link to=\"/companies-income/\" className=\"company__back\">\r\n            Back\r\n          </Link>\r\n          <div className=\"dateRange\">\r\n            <label htmlFor=\"startDate\">From:</label>\r\n            <input\r\n              type=\"date\"\r\n              id=\"startDate\"\r\n              name=\"startDate\"\r\n              onChange={() => {\r\n                setStartDate(\r\n                  new Date(document.querySelector(\"#startDate\").value)\r\n                );\r\n              }}\r\n            />\r\n            <label htmlFor=\"endDate\">to:</label>\r\n            <input\r\n              type=\"date\"\r\n              id=\"endDate\"\r\n              name=\"endDate\"\r\n              onChange={() => {\r\n                setEndDate(new Date(document.querySelector(\"#endDate\").value));\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"company__info\">\r\n            <p>ID: {companyInfo[0].id}</p>\r\n            <p>Name: {companyInfo[0].name}</p>\r\n            <p>City: {companyInfo[0].city}</p>\r\n            <p>Total income: {totalSum}</p>\r\n            <p>Lifetime average: {totalAvg}</p>\r\n            <p>Your range income: {sum}</p>\r\n            <p>Your range average income: {avg}</p>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <div className=\"background\"></div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Company;\r\n","import { useEffect, useRef } from \"react\";\r\n\r\nfunction usePrevious(value) {\r\n  const ref = useRef();\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  });\r\n  return ref.current;\r\n}\r\n\r\nexport default usePrevious;\r\n","import axios from \"axios\";\r\n\r\n//  Getting data from first API (city, id, name), data save into state.companiesArray\r\nexport const getSummaryData = async (setCompanies) => {\r\n  let array = [];\r\n\r\n  try {\r\n    const response = await fetch(\r\n      `https://recruitment.hal.skygate.io/companies`\r\n    );\r\n    if (response.ok) {\r\n      array = await response.json();\r\n    }\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n  setCompanies(array);\r\n};\r\n\r\n//  Getting data from second API (id, incomes {date, value})\r\nexport const getIncomeData = async (companies, setIncomes) => {\r\n  if (companies.length > 0) {\r\n    Promise.all(\r\n      companies.map((el) =>\r\n        axios(`https://recruitment.hal.skygate.io/incomes/${el.id}`)\r\n      )\r\n    )\r\n      .then((responses) =>\r\n        Promise.all(responses.map((res) => res.data)).then((data) => {\r\n          const filtered = data.filter((el) => {\r\n            return el !== \"\";\r\n          });\r\n          setIncomes(filtered);\r\n        })\r\n      )\r\n      .catch((error) => console.error(error));\r\n  }\r\n};\r\n//  Calculate total incomes and insert them to each object in companies\r\nexport const calculateTotalIncomes = (\r\n  companies,\r\n  incomes,\r\n  setCompanies,\r\n  setLoading\r\n) => {\r\n  const newCompanies = companies.map((company) => {\r\n    const income = incomes.find((income) => income.id === company.id);\r\n    const sum = income.incomes.reduce((previous, current) => {\r\n      return previous + parseFloat(current.value);\r\n    }, 0);\r\n\r\n    return { ...company, totalIncome: sum.toFixed(2) };\r\n  });\r\n\r\n  setCompanies(newCompanies);\r\n  setLoading(false);\r\n};\r\n\r\n//  Sorting state.companies by totalIncome desc\r\nexport const sortArrayByTotalIncome = (companies, setCompanies, setSorted) => {\r\n  const sortedArray = companies.sort((a, b) => {\r\n    return b.totalIncome - a.totalIncome;\r\n  });\r\n  setCompanies(sortedArray);\r\n  setSorted(true);\r\n};\r\n","import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport ReactNotification from \"react-notifications-component\";\nimport \"react-notifications-component/dist/theme.css\";\nimport \"./App.css\";\nimport LoadingScreen from \"./conteiners/loadingScreen/loadingScreen\";\nimport Loaded from \"./conteiners/loaded/loaded\";\nimport readVh from \"./helper/readingVh.js\";\nimport Company from \"./conteiners/company/company\";\nimport usePrevious from \"./helper/usePrevious.js\";\nimport {\n  getSummaryData,\n  getIncomeData,\n  calculateTotalIncomes,\n  sortArrayByTotalIncome,\n} from \"./helper/gettingData.js\";\n\nconst App = () => {\n  const [companies, setCompanies] = useState([]);\n  const [incomes, setIncomes] = useState([]);\n  const [sorted, setSorted] = useState(false);\n  const [numberOfItems, setNumberOfItems] = useState(5);\n  const [loading, setLoading] = useState(true);\n\n  //  Download data from first API, calculate vh and calculate numberOfItems\n  const prevCompanies = usePrevious(companies);\n  const prevIncomes = usePrevious(incomes);\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", () => {\n      readVh();\n    });\n\n    //  Get companies data from API\n    if (companies.length === 0) {\n      getSummaryData(setCompanies);\n      setNumberOfItems(readVh());\n    }\n    //  Get income data after getting companies\n    if (prevCompanies) {\n      if (prevCompanies.length !== companies.length) {\n        if (companies.length > 0) {\n          getIncomeData(companies, setIncomes);\n        }\n      }\n    }\n\n    //  Calculate total incomes after getting incomes\n    if (prevIncomes) {\n      if (prevIncomes.length !== incomes.length && incomes.length > 0) {\n        calculateTotalIncomes(companies, incomes, setCompanies, setLoading);\n      }\n    }\n\n    //  Sort companies after total incomes calculate\n    if (companies.length > 0) {\n      if (!loading && !sorted && companies[0].totalIncome) {\n        sortArrayByTotalIncome(companies, setCompanies, setSorted);\n      }\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [companies, incomes]);\n\n  return (\n    <Router>\n      <ReactNotification />\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/\">\n            {sorted ? (\n              <Loaded company={companies} numberOfItems={numberOfItems} />\n            ) : (\n              <LoadingScreen />\n            )}\n          </Route>\n          <Route exact path=\"/companies-income/\">\n            {sorted ? (\n              <Loaded company={companies} numberOfItems={numberOfItems} />\n            ) : (\n              <LoadingScreen />\n            )}\n          </Route>\n          <Route path=\"/company/:id\">\n            {sorted ? (\n              <Company data={[companies, incomes]} />\n            ) : (\n              <LoadingScreen />\n            )}\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWAF\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}